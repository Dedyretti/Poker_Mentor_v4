from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from app.bot.keyboards import get_game_settings_keyboard, get_back_button

router = Router()

@router.message(Command("settings"))
@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã")
async def cmd_game_setup(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã"""
    settings_text = """
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</b>

–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ üí∞ –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Å—Ç–µ–∫: $1000
‚Ä¢ üéØ –ë–ª–∞–π–Ω–¥—ã: $10/$20  
‚Ä¢ ‚è∞ –í—Ä–µ–º—è –Ω–∞ —Ö–æ–¥: 30 —Å–µ–∫
‚Ä¢ ü§ñ –°–ª–æ–∂–Ω–æ—Å—Ç—å AI: –°—Ä–µ–¥–Ω—è—è

–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:
    """
    
    await message.answer(
        settings_text,
        reply_markup=get_game_settings_keyboard()
    )

@router.callback_query(F.data == "setting_stack")
async def setting_stack(callback: CallbackQuery):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å—Ç–µ–∫–∞"""
    await callback.message.edit_text(
        "üí∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å—Ç–µ–∫–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å—Ç–µ–∫–∞:\n"
        "‚Ä¢ –ú–∏–Ω–∏–º—É–º: $100\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: $10,000\n"
        "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: $1,000",
        reply_markup=get_back_button()
    )
    await callback.answer()

@router.callback_query(F.data == "setting_blinds")
async def setting_blinds(callback: CallbackQuery):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–ª–∞–π–Ω–¥–æ–≤"""
    await callback.message.edit_text(
        "üéØ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–ª–∞–π–Ω–¥–æ–≤</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –±–ª–∞–π–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <code>–ú–∞–ª—ã–π/–ë–æ–ª—å—à–æ–π</code>\n"
        "–ü—Ä–∏–º–µ—Ä: <code>10/20</code>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n"
        "‚Ä¢ 5/10\n‚Ä¢ 10/20\n‚Ä¢ 25/50\n‚Ä¢ 50/100",
        reply_markup=get_back_button()
    )
    await callback.answer()

@router.callback_query(F.data == "setting_timing")
async def setting_timing(callback: CallbackQuery):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–∏–Ω–≥–∞"""
    await callback.message.edit_text(
        "‚è∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ö–æ–¥</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –æ–±–¥—É–º—ã–≤–∞–Ω–∏–µ —Ö–æ–¥–∞:\n"
        "‚Ä¢ üêá –ë—ã—Å—Ç—Ä–æ: 15 —Å–µ–∫—É–Ω–¥\n"
        "‚Ä¢ üö∂ –û–±—ã—á–Ω–æ: 30 —Å–µ–∫—É–Ω–¥\n"
        "‚Ä¢ üê¢ –ú–µ–¥–ª–µ–Ω–Ω–æ: 60 —Å–µ–∫—É–Ω–¥",
        reply_markup=get_back_button()
    )
    await callback.answer()

@router.callback_query(F.data == "setting_difficulty")
async def setting_difficulty(callback: CallbackQuery):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ AI"""
    await callback.message.edit_text(
        "ü§ñ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ AI</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞:\n"
        "‚Ä¢ üü¢ –õ–µ–≥–∫–∏–π - –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤\n"
        "‚Ä¢ üü° –°—Ä–µ–¥–Ω–∏–π - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–≥—Ä–∞\n"
        "‚Ä¢ üî¥ –°–ª–æ–∂–Ω—ã–π - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n"
        "‚Ä¢ üü£ –≠–∫—Å–ø–µ—Ä—Ç - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å",
        reply_markup=get_back_button()
    )
    await callback.answer()