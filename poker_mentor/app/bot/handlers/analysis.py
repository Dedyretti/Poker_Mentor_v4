import telebot
from telebot.handler_backends import State, StatesGroup

class HandAnalysis(StatesGroup):
    waiting_for_hand = State()

def setup_analysis_handlers(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä—É–∫"""
    
    @bot.callback_query_handler(func=lambda call: call.data == "analyze_random")
    def analyze_random(callback):
        """–ê–Ω–∞–ª–∏–∑ —Å–ª—É—á–∞–π–Ω–æ–π —Ä—É–∫–∏"""
        from app.bot.keyboards import get_back_button
        
        analysis_result = """
üé≤ <b>–ê–Ω–∞–ª–∏–∑ —Å–ª—É—á–∞–π–Ω–æ–π —Ä—É–∫–∏:</b>

üÉè –í–∞—à–∞ —Ä—É–∫–∞: A‚ô† K‚ô†
üéØ –ü–æ–∑–∏—Ü–∏—è: Middle Position (MP)
üí∞ –ë–ª–∞–π–Ω–¥—ã: $1/$2

<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
‚úÖ <b>–†–µ–π–∑ 3x</b> - —Å–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ä—É–∫–∞
üìä <b>–≠–∫–≤–∏—Ç–∏:</b> 45% –ø—Ä–æ—Ç–∏–≤ —Å–ª—É—á–∞–π–Ω–æ–π —Ä—É–∫–∏

<b>–°–æ–≤–µ—Ç:</b> –ò–≥—Ä–∞–π—Ç–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ, –Ω–æ –±—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ —Ä–µ—Ä–µ–π–∑–∞–º
        """
        
        try:
            bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=callback.message.message_id,
                text=analysis_result,
                reply_markup=get_back_button(),
                parse_mode='HTML'
            )
        except Exception as e:
            bot.send_message(
                callback.message.chat.id,
                analysis_result,
                reply_markup=get_back_button(),
                parse_mode='HTML'
            )
        
        bot.answer_callback_query(callback.id)

    @bot.callback_query_handler(func=lambda call: call.data == "analyze_custom")
    def analyze_custom_start(callback):
        """–ù–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ä—É–∫–∏"""
        from app.bot.keyboards import get_back_button
        
        try:
            bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=callback.message.message_id,
                text=(
                    "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ä—É–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>–ö–∞—Ä—Ç–∞1 –ö–∞—Ä—Ç–∞2 –ü–æ–∑–∏—Ü–∏—è</b>\n\n"
                    "–ü—Ä–∏–º–µ—Ä: <code>A‚ô† K‚ô† MP</code>\n"
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏: EP, MP, CO, BTN, SB, BB"
                ),
                reply_markup=get_back_button(),
                parse_mode='HTML'
            )
        except Exception as e:
            bot.send_message(
                callback.message.chat.id,
                (
                    "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ä—É–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>–ö–∞—Ä—Ç–∞1 –ö–∞—Ä—Ç–∞2 –ü–æ–∑–∏—Ü–∏—è</b>\n\n"
                    "–ü—Ä–∏–º–µ—Ä: <code>A‚ô† K‚ô† MP</code>\n"
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏: EP, MP, CO, BTN, SB, BB"
                ),
                reply_markup=get_back_button(),
                parse_mode='HTML'
            )
        
        bot.set_state(callback.from_user.id, HandAnalysis.waiting_for_hand, callback.message.chat.id)
        bot.answer_callback_query(callback.id)

    @bot.message_handler(state=HandAnalysis.waiting_for_hand)
    def analyze_custom_process(message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ä—É–∫–∏"""
        hand_input = message.text.strip()
        
        analysis_result = f"""
üîç <b>–ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π —Ä—É–∫–∏:</b>

üÉè –†—É–∫–∞: {hand_input}
üéØ –ü–æ–∑–∏—Ü–∏—è: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è...
üí∞ –ë–ª–∞–π–Ω–¥—ã: $1/$2

<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...

<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –§—É–Ω–∫—Ü–∏—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        """
        
        bot.send_message(
            message.chat.id,
            analysis_result,
            parse_mode='HTML'
        )
        
        bot.delete_state(message.from_user.id, message.chat.id)

    @bot.callback_query_handler(func=lambda call: call.data == "back_to_analysis")
    def back_to_analysis(callback):
        """–í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é –∞–Ω–∞–ª–∏–∑–∞"""
        from app.bot.keyboards import get_analysis_options_keyboard
        
        analysis_text = "üîç <b>–ê–Ω–∞–ª–∏–∑ –ø–æ–∫–µ—Ä–Ω–æ–π —Ä—É–∫–∏</b>"
        
        try:
            bot.edit_message_text(
                chat_id=callback.message.chat.id,
                message_id=callback.message.message_id,
                text=analysis_text,
                reply_markup=get_analysis_options_keyboard(),
                parse_mode='HTML'
            )
        except Exception as e:
            bot.send_message(
                callback.message.chat.id,
                analysis_text,
                reply_markup=get_analysis_options_keyboard(),
                parse_mode='HTML'
            )
        
        bot.answer_callback_query(callback.id)